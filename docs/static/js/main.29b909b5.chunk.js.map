{"version":3,"sources":["Components/AddCategory.jsx","helpers/getGifs.js","Components/GifGridItem.jsx","Components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","className","value","onChange","target","placeholder","getGifs","category","a","fetch","encodeURI","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","console","log","src","alt","GifGrid","imgs","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,KAIlB,SACI,uBACIO,KAAK,OACLC,UAAU,yCACVC,MAAOV,EACPW,SAjBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,QAiBfG,YAAY,4C,+BC1BfC,EAAO,uCAAG,WAAQC,GAAR,qBAAAC,EAAA,sEAEDC,MAAM,0CAAD,OAA2CC,UAAUH,GAArD,uDAFJ,cAEbI,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAaZL,GAbY,2CAAH,sDCEPQ,EAAc,SAAC,GAAsB,IAArBL,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OADAI,QAAQC,IAAIP,EAAIE,EAAKD,GAEjB,sBAAKjB,UAAU,mDAAf,UACI,qBAAKwB,IAAMN,EAAMO,IAAKR,IACtB,kCAAMA,EAAN,WCFCS,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdhB,mBAAS,CAC/BqC,KAAM,GACNC,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAM,SAAAL,GAEHG,EAAS,CACLH,OACAC,SAAS,SAItB,CAAEtB,IAGEuB,EDfmBI,CAAa3B,GAA/BqB,EAF6B,EAE7BA,KAAMC,EAFuB,EAEvBA,QAEd,OACI,qCACI,oBAAI5B,UAAU,oCAAd,SAAoDM,IAEhDsB,GAAW,mBAAG5B,UAAU,8DAAb,wBAEf,qBAAKA,UAAU,YAAf,SAEQ2B,EAAKb,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEbjCkB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAK9B,OACI,qCACI,qBAAKW,UAAU,cAAf,SAA6B,0CAC7B,cAAC,EAAD,CAAaX,cAAeA,IAC5B,uBAEA,6BACKS,EAAWgB,KAAI,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCX1D6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29b909b5.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    } \n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2)\n            setCategories(categories => [inputValue,...categories]);\n            setInputValue('');\n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                className=\"form-control bg-transparent text-white\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Ingrese su busqueda y presione enter\"\n            />   \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n","export const getGifs = async ( category ) => {\n    // const res = await fetch(`${BASE_URL}/gifs/search?q=Rick and morty&api_key=${API_KEY}&limit=10`)\n    const res = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=JhEF1vYAPk05pkraSnNa2F2l6GIAmuIc&limit=10`)\n    const { data } = await res.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    console.log(id, url, title);\n    return (\n        <div className=\"card shadow-lg animate__animated animate__fadeIn\">\n            <img src={ url } alt={title} />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { imgs, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            {\n                loading && <p className=\"animate__animated animate__flash animate__infinite infinite\">loading...</p>\n            }\n            <div className=\"card-grid\">\n                {\n                    imgs.map( img => (\n                        <GifGridItem key={img.id} {...img} />\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\n\nimport { getGifs } from '../helpers/getGifs';\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        imgs: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    imgs,\n                    loading: false\n                })\n                \n            })\n    }, [ category ]);\n\n\n    return state;\n}","import React, {useState} from 'react';\n\nimport { AddCategory } from './Components/AddCategory';\nimport { GifGrid } from './Components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['one punch']);\n\n\n    return (\n        <>\n            <div className=\"text-center\"><h2>Gifgif</h2></div>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n           {/*  <button onClick={addCategory}>Agregar</button> */}\n            <ol>\n                {categories.map(category => <GifGrid key={category} category={category} />)}\n            </ol> \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}